<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xml:lang="en" lang="en"
      i18n:domain="ims.upload"
      metal:use-macro="here/main_template/macros/master">

  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    <metal:css fill-slot="style_slot">
      <!-- Bootstrap styles -->
      <link rel="stylesheet" type="text/css" media="screen" href="//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css">
      <link rel="stylesheet" type="text/css" media="screen" tal:attributes="href string:${portal_url}/++resource++ims.upload/bootstrap.lite.css">
      <!-- <link rel="stylesheet" tal:attributes="href string:${portal_url}/++resource++ims.upload/bootstrap.min.css"> -->
      
      <!-- CSS to style the file input field as button and adjust the Bootstrap progress bars -->
      <link rel="stylesheet" tal:attributes="href string:${portal_url}/++resource++ims.upload/blueimp/css/jquery.fileupload.css">
    </metal:css>

    <metal:javascript fill-slot="javascript_head_slot">
      <script tal:attributes="src string:${portal_url}/++resource++ims.upload/blueimp/js/load-image.min.js"></script>
      <!-- The Canvas to Blob plugin is included for image resizing functionality -->
      <script tal:attributes="src string:${portal_url}/++resource++ims.upload/blueimp/js/canvas-to-blob.min.js"></script>
      <!-- Bootstrap JS is not required, but included for the responsive demo navigation -->
      <script src="//netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js"></script>
      <!-- <script tal:attributes="src string:${portal_url}/++resource++ims.upload/bootstrap.min.js"></script> -->
      <!-- The Iframe Transport is required for browsers without support for XHR file uploads -->
      <script tal:attributes="src string:${portal_url}/++resource++ims.upload/blueimp/js/jquery.iframe-transport.js"></script>
      <!-- The basic File Upload plugin -->
      <script tal:attributes="src string:${portal_url}/++resource++ims.upload/blueimp/js/jquery.fileupload.js"></script>
      <!-- The File Upload processing plugin -->
      <script tal:attributes="src string:${portal_url}/++resource++ims.upload/blueimp/js/jquery.fileupload-process.js"></script>
      <!-- The File Upload image preview & resize plugin -->
      <script tal:attributes="src string:${portal_url}/++resource++ims.upload/blueimp/js/jquery.fileupload-image.js"></script>
      <!-- The File Upload audio preview plugin -->
      <script tal:attributes="src string:${portal_url}/++resource++ims.upload/blueimp/js/jquery.fileupload-audio.js"></script>
      <!-- The File Upload video preview plugin -->
      <script tal:attributes="src string:${portal_url}/++resource++ims.upload/blueimp/js/jquery.fileupload-video.js"></script>
      <!-- The File Upload validation plugin -->
      <script tal:attributes="src string:${portal_url}/++resource++ims.upload/blueimp/js/jquery.fileupload-validate.js"></script>
      
    </metal:javascript>
  </head>

  <body>
    <div metal:fill-slot="content-core">
      <br>
      <!-- The fileinput-button span is used to style the file input field as button -->
      <span class="btn btn-success fileinput-button">
          <i class="glyphicon glyphicon-plus"></i>
          <span>Add files...</span>
          <!-- The file input field used as target for the file upload widget -->
          <input id="fileupload" type="file" name="files[]" multiple>
      </span>
      <button class="btn btn-primary" id="uploadAll">
        <i class="glyphicon glyphicon-upload"></i>
        Upload All
      </button>
      <button class="btn btn-warning cancel" id="cancelAll">
          <i class="glyphicon glyphicon-ban-circle"></i>
          Clear Uploads
      </button>
      <br>
      <br>
      <!-- The global progress bar -->
      <div id="progress" class="progress">
          <div class="progress-bar progress-bar-success"></div>
      </div>
      <!-- The container for the uploaded files -->
      <div id="files" class="files"></div>
      <br/>
        
      <data id="chunksize" tal:attributes="data view/chunksize" />
      <script>
        /*jslint unparam: true, regexp: true */
        /*global window, $ */
        
        function refreshlisting() {
          $("#upload-folder-listing").load("@@upload_refresh",function(responseTxt,statusTxt,xhr){
            if(statusTxt=="error")
              alert("Error updating content listing: "+xhr.status+": "+xhr.statusText);
          });
        }
        
        function getCurrentFiles() {
          var filenames = new Array();
          contents = $('#upload-folder-listing a.url')
          for (i=0;i<contents.length;i++) {
            filenames.push($(contents[i]).text());
          };
          return filenames;
        }
        
        function update_progress(data) {
          var progress = parseInt(data.loaded / data.total * 100, 10);
          $('#progress .progress-bar').css(
              'width',
              progress + '%'
          );
        }
        
        $('#uploadAll').click(function() {
          $('#files button.singular').click()
        });
        $('#cancelAll').click(function() {
          $('#files div button').each(function (){
            var $this = $(this),
                data = $this.data();
            if (data) {
              data.abort();
            }
          });
          $('#files div').remove();
          $('#progress .progress-bar').css('width','0%');
          refreshlisting();
        });
        $(function () {
            'use strict';
            var url = '@@upload-chunk',
                uploadButton = $('<button/>')
                    .addClass('btn btn-primary singular')
                    .prop('disabled', true)
                    .text('Processing...')
                    .on('click', function () {
                        var $this = $(this),
                            data = $this.data();
                        $this
                            .off('click')
                            .text('Abort')
                            .on('click', function () {
                                $this.closest('p').find('img').remove();
                                data.abort();
                            });
                        $this.closest('p').prepend(spinner.clone(true));
                        data.submit().always(function () {
                            $this.remove();
                        });
                    }),
                cancelButton = $('<button/>')
                    .addClass('btn btn-warning')
                    .text('Clear')
                    .click(function () {
                      var $this = $(this),
                          data = $this.data();
                      $this.closest('div').remove();
                      data.abort();
                      refreshlisting();
                      update_progress(data);
                    }),
                spinner = $('<img>')
                  .attr('src','spinner.gif')
                  .css('padding-right','0.5em');
                    
            $('#fileupload').fileupload({
                url: url,
                dataType: 'json',
                autoUpload: false,
                maxChunkSize: parseInt($('#chunksize').attr('data')),
                add: function (e, data) {
                    var that = this;
                    $.getJSON('@@chunk-check', {file: data.files[0].name}, function (uploadedBytes) {
                        $.blueimp.fileupload.prototype
                            .options.add.call(that, e, data);
                        data.uploadedBytes = uploadedBytes;
                        if (uploadedBytes > 0) {
                          data.data = null
                          $(data.context.children()).find('button:first').text('Resume Upload');
                        }
                    });
                },
                disableImageResize: /Android(?!.*Chrome)|Opera/
                    .test(window.navigator.userAgent),
                previewMaxWidth: 100,
                previewMaxHeight: 100,
                previewCrop: true
            }).on('fileuploadadd', function (e, data) {
                data.context = $('<div/>').appendTo('#files');
                $.each(data.files, function (index, file) {
                    var node = $('<p/>')
                            .append($('<span/>').text(file.name + ' - ' + file.size + ' bytes'));
                    if (!index) {
                        node
                            .append('<br>')
                            .append(uploadButton.clone(true).data(data))
                            .append(' ')
                            .append(cancelButton.clone(true).data(data));
                        if ($.inArray(file.name,getCurrentFiles()) != -1) {
                          node.append($('<span class="text-danger"/>').text(' WARNING - file already exists and will be overwritten'));
                        }
                    }
                    node.appendTo(data.context);
                });
            }).on('fileuploadprocessalways', function (e, data) {
                var index = data.index,
                    file = data.files[index],
                    node = $(data.context.children()[index]);
                if (file.preview) {
                    node
                        .prepend('<br>')
                        .prepend(file.preview);
                }
                if (file.error) {
                    node
                        .append('<br>')
                        .append($('<span class="text-danger"/>').text(file.error));
                }
                if (index + 1 === data.files.length) {
                    data.context.find('button.singular')
                        .text('Upload')
                        .prop('disabled', !!data.files.error);
                }
            }).on('fileuploadprogressall', function (e, data) {
                update_progress(data);
            }).on('fileuploaddone', function (e, data) {
                refreshlisting();
                $.each(data.result.files, function (index, file) {
                    $(data.context.children()[index]).find('img').remove();
                    if (file.url) {
                       var link = $('<a>')
                           .attr('target', '_blank')
                           .prop('href', file.url+'/view');
                       var child = $(data.context.children()[index]);
                       child.find('span').before('<span class="success glyphicon glyphicon-ok"/> ');
                       child.find('button').remove();
                       child.wrap(link);
                    } else if (file.error) {
                        var error = $('<span class="text-danger"/>').text(file.error);
                        $(data.context.children()[index])
                            .append('<br>')
                            .append(error);
                    }
                });
                
            }).on('fileuploadfail', function (e, data) {
                $.each(data.files, function (index, file) {
                    $(data.context.children()[index]).find('img').remove();
                    var error = $('<span class="text-danger"/>').text('File upload failed.');
                    $(data.context.children()[index])
                        .append('<br>')
                        .append(error)
                        .prepend('<span class="warning glyphicon glyphicon-remove"/> ');
                });
            }).prop('disabled', !$.support.fileInput)
                .parent().addClass($.support.fileInput ? undefined : 'disabled');
        });
      </script>
      <div id="upload-folder-listing" style="display:none;">
        <span tal:replace="structure view/contents_table" tal:omit-tag=""/>
      </div>
    </div>
</body> 
</html>