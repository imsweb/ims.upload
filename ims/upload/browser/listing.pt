<metal:listingmacro define-macro="listing">
<tal:foldercontents define="contentFilter contentFilter|request/contentFilter|nothing;
                    contentFilter python:contentFilter and dict(contentFilter) or {};
                    limit_display limit_display|request/limit_display|nothing;
                    limit_display python:limit_display and int(limit_display) or None;
                    more_url more_url|request/more_url|string:folder_contents;
                    is_a_topic python:context.portal_type=='Topic';
                    folderContents folderContents|nothing; folderContents python:folderContents or is_a_topic and context.queryCatalog(batch=True, **contentFilter) or context.getFolderContents(contentFilter, batch=True, b_size=limit_display or 100);
                    folderContents python:[b for b in folderContents if b.portal_type != 'ChunkedFile'];
                    site_properties context/portal_properties/site_properties;
                    use_view_action site_properties/typesUseViewActionInListings|python:();
                    Batch python:modules['Products.CMFPlone'].Batch;
                    b_start python:request.get('b_start', 0);
                    batch python:isinstance(folderContents, Batch) and folderContents or Batch(folderContents, limit_display or 100, int(b_start), orphan=1);
                    isAnon context/@@plone_portal_state/anonymous;
                    normalizeString nocall: context/plone_utils/normalizeString;
                    toLocalizedTime nocall: context/@@plone/toLocalizedTime;
                    show_about python:not isAnon or site_properties.allowAnonymousViewAbout;
                    navigation_root_url context/@@plone_portal_state/navigation_root_url;
                    pas_member context/@@pas_member;
                    portal_state context/@@plone_portal_state;
                    portal_url portal_state/portal_url;
                    plone_view context/@@plone;">
<tal:listing condition="batch">
    <table class="tablesorter" metal:define-slot="entries" id="upload_listing">
      <thead>
        <tr>
          <th class="borderedHeader">File</th>
          <th class="borderedHeader">Creator</th>
          <th class="borderedHeader">Modified Date</th>
          <th class="borderedHeader">File Size</th>
        </tr>
      </thead>
      <tbody>
        <tal:entry tal:repeat="item folderContents" metal:define-macro="entries">
        <tal:block tal:define="item_url item/getURL|item/absolute_url;
                               item_id item/getId|item/id;
                               item_title_or_id item/pretty_title_or_id;
                               item_description item/Description;
                               item_type item/portal_type;
                               item_type_title item/Type;
                               item_modified item/ModificationDate;
                               item_created item/CreationDate;
                               item_icon python:plone_view.getIcon(item);
                               item_type_class python:'contenttype-' + normalizeString(item_type);
                               item_wf_state item/review_state|python: context.portal_workflow.getInfoFor(item, 'review_state', '');
                               item_wf_state_class python:'state-' + normalizeString(item_wf_state);
                               item_creator item/Creator;
                               item_start item/start|item/StartDate|nothing;
                               item_end item/end|item/EndDate|nothing;
                               item_sametime python: item_start == item_end;
                               item_samedate python: (item_end - item_start &lt; 1) if item_type == 'Event' else False">
          <metal:block define-slot="entry">
          <tr>
            <td>
              <span class="summary">
                  <img tal:replace="structure item_icon/html_tag" />
                  <a href="#"
                     tal:attributes="href python:item_type in use_view_action and item_url+'/view' or item_url;
                                     class string:$item_type_class $item_wf_state_class url"
                     tal:content="item_title_or_id">
                      Item Title
                  </a>
                  <span tal:condition="python:item_type in use_view_action">
                    &mdash;
                    <a tal:attributes="href item_url">
                      <img tal:attributes="src string:${portal_url}/download_icon.gif" title="download" alt="download" />
                    </a>
                  </span>
              </span>
            </td>
            <td>
              <span class="documentByLine"
                    tal:condition="item_creator"
                    tal:define="author python:view.member_info(item_creator);"
                    tal:content="python: author and author['fullname'] or item_creator"
                    tal:omit-tag="not:author" />
            </td>
            <td>
              <tal:modified>
                  <span tal:replace="python:toLocalizedTime(item_modified,long_format=1)">
                    August 16, 2001 at 23:35:59
                  </span>
              </tal:modified>
            </td>
            <td tal:content="item/getObjSize"/>
          </tr>
          </metal:block>
        </tal:block>
        </tal:entry>
      </tbody>
    </table>

    <p>For mass modification or deletion of uploaded files please use the Contents page</p>

   <div tal:define="actions view/content_actions" id="upload_listing_buttons">
      <span tal:replace="structure context/@@authenticator/authenticator"/>
      <tal:action repeat="action actions">
        <button tal:attributes="value action/title;
                           name action/url;
                           class python:action.get('context') and 'btn btn-%s' % action['context'] or 'btn btn-default'"
                type="submit">
          <span tal:attributes="class string:glyphicon glyphicon-${action/icon}" />
          <tal:btn content="action/title" />
        </button>
      </tal:action>
    </div>
    <input type="hidden" name="orig_template" id="orig_template" value="upload" />

    <script type="text/javascript">
      $('#toggler').toggle(
            function() {
                $('input[name*="paths:list"]').attr('checked', 'checked');
                $('#toggler').val('Uncheck all');
            },
            function() {
                $('input[name*="paths:list"]').attr('checked', null);
                $('#toggler').val('Check all');
            }
        );

      $(document).ready(function()
          {
            $('#upload_listing tr:odd').addClass("odd");
            $.tablesorter.addParser({
                id: 'fileunits',
                is: function(s) {
                    return false;
                },
                format: function(s) {
                    data = s.split(' ')
                    val = parseFloat(data[0]);
                    unit = data[1].toLowerCase();
                    conversions = {'b':1,
                                   'kb':1024,
                                   'mb':Math.pow(1024,2),
                                   'gb':Math.pow(1024,3),
                                   'tb':Math.pow(1024,4)}
                    return val*conversions[unit];
                },
                // set type, either numeric or text
                type: 'numeric'
            });
            $('#upload_listing').tablesorter({
                                       headers: {0:{sorter:false},3:{sorter:'shortDate'},4:{sorter:'fileunits'}},
                                       sortList: [[3,0]] }).bind("sortEnd", function(){
              $('#upload_listing tr:odd').addClass("odd");
              $('#upload_listing tr:even').removeClass("odd");
              }
            );
          }
      );
    </script>

    <div metal:use-macro="context/batch_macros/macros/navigation" />

</tal:listing>
<metal:empty metal:define-slot="no_items_in_listing">
    <p class="discreet"
       tal:condition="not: folderContents"
       i18n:translate="description_no_items_in_folder">
        There are currently no other items.
    </p>
</metal:empty>

</tal:foldercontents>
</metal:listingmacro>