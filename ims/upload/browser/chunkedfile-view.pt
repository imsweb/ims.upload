<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xml:lang="en" lang="en"
      i18n:domain="ims.upload"
      metal:use-macro="here/main_template/macros/master">
    
  <head>
    <metal:css fill-slot="style_slot">
      <!-- Bootstrap styles -->
      <link rel="stylesheet" type="text/css" media="screen" href="//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css">
      <link rel="stylesheet" type="text/css" media="screen" tal:attributes="href string:${portal_url}/++resource++ims.upload/bootstrap.lite.css">
      <!-- <link rel="stylesheet" tal:attributes="href string:${portal_url}/++resource++ims.upload/bootstrap.min.css"> -->
      
      <!-- CSS to style the file input field as button and adjust the Bootstrap progress bars -->
      <link rel="stylesheet" tal:attributes="href string:${portal_url}/++resource++ims.upload/blueimp/css/jquery.fileupload.css">
    </metal:css>

    <metal:javascript fill-slot="javascript_head_slot">
      <script tal:attributes="src string:${portal_url}/++resource++ims.upload/blueimp/js/load-image.min.js"></script>
      <!-- The Canvas to Blob plugin is included for image resizing functionality -->
      <script tal:attributes="src string:${portal_url}/++resource++ims.upload/blueimp/js/canvas-to-blob.min.js"></script>
      <!-- Bootstrap JS is not required, but included for the responsive demo navigation -->
      <script src="//netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js"></script>
      <!-- <script tal:attributes="src string:${portal_url}/++resource++ims.upload/bootstrap.min.js"></script> -->
      <!-- The Iframe Transport is required for browsers without support for XHR file uploads -->
      <script tal:attributes="src string:${portal_url}/++resource++ims.upload/blueimp/js/jquery.iframe-transport.js"></script>
      <!-- The basic File Upload plugin -->
      <script tal:attributes="src string:${portal_url}/++resource++ims.upload/blueimp/js/jquery.fileupload.js"></script>
      <!-- The File Upload processing plugin -->
      <script tal:attributes="src string:${portal_url}/++resource++ims.upload/blueimp/js/jquery.fileupload-process.js"></script>
      <!-- The File Upload image preview & resize plugin -->
      <script tal:attributes="src string:${portal_url}/++resource++ims.upload/blueimp/js/jquery.fileupload-image.js"></script>
      <!-- The File Upload audio preview plugin -->
      <script tal:attributes="src string:${portal_url}/++resource++ims.upload/blueimp/js/jquery.fileupload-audio.js"></script>
      <!-- The File Upload video preview plugin -->
      <script tal:attributes="src string:${portal_url}/++resource++ims.upload/blueimp/js/jquery.fileupload-video.js"></script>
      <!-- The File Upload validation plugin -->
      <script tal:attributes="src string:${portal_url}/++resource++ims.upload/blueimp/js/jquery.fileupload-validate.js"></script>
      
    </metal:javascript>
  </head>

  <body>
      
    <div metal:fill-slot="content-core">
      <p>
        This file's upload has not been completed.
      </p>
      
      <h2>Current Size</h2>
      <p tal:content="context/currsize" />
      
      <span class="btn btn-success fileinput-button">
          <i class="glyphicon glyphicon-plus"></i>
          <span>Resume Upload</span>
          <!-- The file input field used as target for the file upload widget -->
          <input id="fileupload" type="file" name="files" multiple>
      </span>
        
      <script>
        $('#fileupload').fileupload({
            maxChunkSize: 10000000, // 10 MB
            add: function (e, data) {
                var that = this;
                $.getJSON('@@upload-renew', {file: data.files[0].name}, function (result) {
                    var file = result.file;
                    alert(file.size);
                    data.uploadedBytes = file && file.size;
                    $.blueimp.fileupload.prototype
                        .options.add.call(that, e, data);
                });
            }
        });
      </script>
        
        
      <h2>Chunks</h2>
      <span tal:condition="not:context/objectValues">There are no chunks.</span>
      <ul>
        <tal:chunk repeat="chunk context/objectValues">
          <li><a tal:attributes="href chunk/absolute_url" tal:content="chunk/getId" /></li>
        </tal:chunk>
      </ul>
    </div>
</body> 
</html>